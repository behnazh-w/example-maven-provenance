name: Release
on:
  workflow_dispatch:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  release:
    permissions:
      id-token: write
      contents: read
      attestations: write
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:

    - name: Check out repository
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      with:
        fetch-depth: 0

    - name: Set up Apache Maven Central
      uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4.2.1
      with: # Running setup-java again overwrites the settings.xml
        distribution: temurin
        java-version: '17'
        server-id: maven-central # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: MAVEN_USERNAME # env variable for username in deploy
        server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
        gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    # In case we have to use Oracle Java SE for compiling.
    - name: Setup Oracle Java SE
      uses: oracle-actions/setup-java@83e2004a40aaa491fbc6b4697353b9a75b095efb # v1.3.4
      with:
        website: oracle.com
        release: '17'

    - name: Publish to Apache Maven Central
      run: ./mvnw source:jar deploy -s "$GITHUB_WORKSPACE"/settings.xml
      env:
        MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
        MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

    # Build provenance
    - name: Attest Build Provenance
      uses: actions/attest-build-provenance@bdd51370e0416ac948727f861e03c2f05d32d78e # v1.3.2
      with:
        subject-path: ./*/target/*.jar
